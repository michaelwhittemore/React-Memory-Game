{"version":3,"sources":["components/Navbar.js","components/Card.js","components/CardContainer.js","components/Game.js","App.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","current","best","cardStyle","height","width","Card","image","title","style","onClick","handleOnClick","id","src","alt","CardContainer","cardArray","map","item","components_Card","key","Game","state","clickedArray","event","preventDefault","parseInt","target","_this","includes","youLose","push","setState","shufflePage","console","log","alert","tempCurrent","newCardArray","Array","from","i","length","j","Math","floor","random","_ref","this","Fragment","components_Navbar","components_CardContainer","Component","App","components_Game","ReactDOM","render","src_App","document","getElementById"],"mappings":"uKAWeA,MATf,SAAgBC,GACZ,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAClBH,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,kBACoBJ,EAAMK,QAD1B,gBACgDL,EAAMM,QCJxDC,EAAW,CAACC,OAAQ,IAAKC,MAAO,KAUvBC,MATf,SAAcV,GACV,IAAMW,EAAQX,EAAMW,MACdC,EAAQZ,EAAMY,MACpB,OAAOX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoBS,MAAON,GAChDN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BAA0BU,QAASd,EAAMe,cACvDC,GAAIhB,EAAMY,MAAOC,MAAON,EAAWU,IAAKN,EAAOO,IAAKN,MCM3CO,MAXf,SAAuBnB,GACnB,IAAMoB,EAAWpB,EAAMoB,UAAUC,IAAK,SAACC,GAAD,OAClCrB,EAAAC,EAAAC,cAACoB,EAAD,CAAMX,MAAOU,EAAK,GAAIX,MAAOW,EAAK,GAAIP,cAAef,EAAMe,cAC3DS,IAAKF,EAAK,OAGd,OAAOrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACjBgB,ICmEMK,6MAtEXC,MAAQ,CACJrB,QAAS,EACTC,KAAM,EAGNc,UAAW,CAAC,CAAC,EAAE,mEAAoE,CAAC,EAAE,qEAAsE,CAAC,EAAE,kEAAmE,CAAC,EAAE,kEAAkE,CAAC,EAAE,oEAAoE,CAAC,EAAE,6EAA6E,CAAC,EAAE,oFAAoF,CAAC,EAAE,+EAA+E,CAAC,EAAE,qEAAqE,CAAC,GAAG,sEAAsE,CAAC,GAAG,mEAAmE,CAAC,GAAG,2EAGp0BO,aAAc,MAIlBZ,cAAgB,SAACa,GACbA,EAAMC,iBACN,IAAMb,EAAKc,SAASF,EAAMG,OAAOf,IAEjC,GAAIgB,EAAKN,MAAMC,aAAaM,SAASjB,GACjCgB,EAAKE,cAEJ,CAGDF,EAAKN,MAAMC,aAAaQ,KAAKnB,GAC7B,IAAMX,EAAW2B,EAAKN,MAAMrB,QAAU,EACtC2B,EAAKI,SAAS,CAAE/B,QAASA,IACzB2B,EAAKK,cAETC,QAAQC,IAAIP,EAAKN,MAAMC,iBAM3BO,QAAU,WACNM,MAAM,aACN,IAAMC,EAAcT,EAAKN,MAAMrB,QAC/B2B,EAAKI,SAAS,CACV/B,QAAS,EACTsB,aAAc,GACdrB,KAAMmC,IAEVT,EAAKK,iBAGTA,YAAc,WAIV,IAFA,IAAMK,EAAeC,MAAMC,KAAKZ,EAAKN,MAAMN,WAElCyB,EAAIH,EAAaI,OAAS,EAAGD,EAAI,EAAGA,IAAK,CAC9C,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADIM,EAET,CAACT,EAAaK,GAAIL,EAAaG,IAAnEH,EAAaG,GAFgCM,EAAA,GAE5BT,EAAaK,GAFeI,EAAA,GAIlDnB,EAAKI,SAAS,CAAChB,UAAUsB,wFAIzBU,KAAKf,+CAGL,OAAOpC,EAAAC,EAAAC,cAACF,EAAAC,EAAMmD,SAAP,KAEHpD,EAAAC,EAAAC,cAACmD,EAAD,CAAQjD,QAAS+C,KAAK1B,MAAMrB,QACxBC,KAAM8C,KAAK1B,MAAMpB,OAErBL,EAAAC,EAAAC,cAACoD,EAAD,CAAenC,UAAWgC,KAAK1B,MAAMN,UACjCL,cAAeqC,KAAKrC,wBAlEjByC,aCCJC,MAJf,WACE,OAAOxD,EAAAC,EAAAC,cAACuD,EAAD,OCCTC,IAASC,OAAO3D,EAAAC,EAAAC,cAAC0D,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.61966b5e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Navbar(props) {\r\n    return <nav className=\"navbar bg-primary\">\r\n        <h1> Clicky Game </h1>\r\n        <span className=\"navbar-text\">\r\n            Current score: {props.current} Best Score: {props.best} \r\n    </span>\r\n    </nav>\r\n}\r\n\r\nexport default Navbar","import React from \"react\";\r\n//need to adjust the css so that the cards are \r\nconst cardStyle= {height: 200, width: 200}\r\nfunction Card(props) {\r\n    const image = props.image\r\n    const title = props.title\r\n    return <div className=\"w-25 h-5 d-inline\" style={cardStyle}>\r\n     <img className=\"img-thumbnail img-fluid\" onClick={props.handleOnClick}\r\n      id={props.title} style={cardStyle} src={image} alt={title} />\r\n        </div>\r\n}\r\n\r\nexport default Card\r\n","import React from \"react\";\r\nimport Card from \"./Card\"\r\n//need to adjust the css so that the cards are \r\nfunction CardContainer(props) {\r\n    const cardArray= props.cardArray.map( (item) => \r\n        <Card title={item[0]} image={item[1]} handleOnClick={props.handleOnClick}\r\n        key={item[0]} />\r\n    )\r\n    \r\n    return <div className=\"container\">\r\n        {cardArray}\r\n    </div>\r\n}\r\n\r\nexport default CardContainer","import React, { Component } from \"react\";\r\nimport Navbar from \"./Navbar\";\r\n//import Card from \"./Card\"\r\nimport CardContainer from \"./CardContainer\"\r\n//control the game functionality and wraps all the components\r\n\r\nclass Game extends Component {\r\n    state = {\r\n        current: 0,\r\n        best: 0,\r\n        //card array should be an array on key value pairs\r\n        //and we need a method to shuffle them\r\n        cardArray: [[1,\"https://upload.wikimedia.org/wikipedia/en/d/dc/MichaelScott.png\"], [2,\"https://upload.wikimedia.org/wikipedia/en/c/cd/Dwight_Schrute.jpg\"], [3,\"https://upload.wikimedia.org/wikipedia/en/7/7e/Jim-halpert.jpg\"], [4,\"https://upload.wikimedia.org/wikipedia/en/6/67/Pam_Beesley.jpg\"],[5,\"https://upload.wikimedia.org/wikipedia/en/0/0b/Angela_Martin.jpg\"],[6,\"https://upload.wikimedia.org/wikipedia/en/8/84/Andy_Bernard_photoshot.jpg\"],[7,\"https://upload.wikimedia.org/wikipedia/en/1/18/Toby_Flenderson_promo_picture.jpg\"],[8,\"https://upload.wikimedia.org/wikipedia/en/6/60/Office-1200-baumgartner1.jpg\"],[9,\"https://upload.wikimedia.org/wikipedia/en/2/23/Stanley_Hudson.jpg\"],[10,\"https://upload.wikimedia.org/wikipedia/en/6/6f/Meredith_Palmer.jpg\"],[11,\"https://upload.wikimedia.org/wikipedia/en/6/69/Kelly_Kapoor.jpg\"],[12,\"https://upload.wikimedia.org/wikipedia/en/f/ff/Phyllis_Lapin-Vance.jpg\"]],\r\n        //add the corresponding id to the clicked array\r\n        //everytime that a component is clicked\r\n        clickedArray: []\r\n    };\r\n\r\n    // takes action when we click a card\r\n    handleOnClick = (event) => {\r\n        event.preventDefault();\r\n        const id = parseInt(event.target.id)\r\n        //you lose if you already clicked one of the cards\r\n        if (this.state.clickedArray.includes(id)) {\r\n            this.youLose()\r\n        }\r\n        else {\r\n            //if we haven't already clicked this elemnt we add it\r\n            //to the list and increase the score\r\n            this.state.clickedArray.push(id)\r\n            const current = (this.state.current + 1)\r\n            this.setState({ current: current })\r\n            this.shufflePage()\r\n        }\r\n        console.log(this.state.clickedArray)\r\n\r\n    }\r\n    //function for when you lose\r\n    //we should reset everything except for best which is set\r\n    //to the current score\r\n    youLose = () => {\r\n        alert(\"You lose!\")\r\n        const tempCurrent = this.state.current\r\n        this.setState({\r\n            current: 0,\r\n            clickedArray: [],\r\n            best: tempCurrent\r\n        })\r\n        this.shufflePage()\r\n    }\r\n    //shuffle should switch the order of the cards around\r\n    shufflePage = () => {\r\n        //clone the cardArray\r\n        const newCardArray = Array.from(this.state.cardArray)\r\n        //shuffling algorith taken from stack overflow\r\n        for (let i = newCardArray.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [newCardArray[i], newCardArray[j]] = [newCardArray[j], newCardArray[i]];\r\n        }\r\n        this.setState({cardArray:newCardArray})\r\n    }\r\n    //on load we should immeditaley shuffle the page\r\n    componentDidMount(){\r\n        this.shufflePage()\r\n    }\r\n    render() {\r\n        return <React.Fragment>\r\n            {/* create the navbar */}\r\n            <Navbar current={this.state.current}\r\n                best={this.state.best} />\r\n            {/* create the card conatiner*/}\r\n            <CardContainer cardArray={this.state.cardArray}\r\n                handleOnClick={this.handleOnClick} />\r\n        </React.Fragment>\r\n    }\r\n}\r\n\r\nexport default Game;","import React from \"react\";\nimport Game from \"./components/Game\";\n\nfunction App() {\n  return <Game />;\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}